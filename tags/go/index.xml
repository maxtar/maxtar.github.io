<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Go on Max Wiki Site</title><link>https://maxtar.github.io/tags/go/</link><description>Recent content in Go on Max Wiki Site</description><generator>Hugo -- gohugo.io</generator><language>ru-RU</language><lastBuildDate>Sun, 09 Oct 2022 01:46:24 +0300</lastBuildDate><atom:link href="https://maxtar.github.io/tags/go/index.xml" rel="self" type="application/rss+xml"/><item><title>Полезные программы на Go</title><link>https://maxtar.github.io/programming/go/useful-programs/</link><pubDate>Sun, 09 Oct 2022 01:46:24 +0300</pubDate><guid>https://maxtar.github.io/programming/go/useful-programs/</guid><description>Различные программы, написанные на Go.
Разное Консольные приложения Работа с файлами Хранение и версионирование кода Нагрузочное тестирование WEB Рисование графиков Обработка и трансформация данных Сеть Мониторинг Служебные Работа с графикой Работа с JSON Работа с картами, координатами и т.д. Общение Соцсети, fediverse Безопасность Базы данных и прочее Разное Простой Web Framework Echo Лёгкая wiki. Ketchup CMS, github. matterbridge. Мост для объединения различных средств общения (slack, tegeram, mattermost и т.д.). Hermes - сервер для обмена файлами.</description></item><item><title>Полезные функции</title><link>https://maxtar.github.io/programming/go/useful-func/</link><pubDate>Wed, 05 Oct 2022 01:32:25 +0300</pubDate><guid>https://maxtar.github.io/programming/go/useful-func/</guid><description>Перехват Ctrl+C Более простой вариант Как правильно реализовать Singletone Ожидание нажатия Enter в консоли Логирование из тестов Создание собственного типа аргумента командной строки Удаление элемента из slice Подключение к Microsoft IIS по SSL Вычисление абсолютного значения целых чисел Перехват Ctrl+C Информация взята из блога Mat Ryer.
func main() { ctx := context.Background() // trap Ctrl#C and call cancel on the context ctx, cancel := context.WithCancel(ctx) c := make(chan os.Signal, 1) signal.</description></item><item><title>Полезные библиотеки</title><link>https://maxtar.github.io/programming/go/useful-libs/</link><pubDate>Wed, 05 Oct 2022 00:55:20 +0300</pubDate><guid>https://maxtar.github.io/programming/go/useful-libs/</guid><description>Конфигурация и всё такое Логгирование UI Пользовательский интерфейс в терминале GUI Консоль Работа с БД Работа с json, XML HTML, парсинг сайтов Работа с файлами Тестирование Генерация данных HTTP WEB-приложения OpenAPI Работа с сетью Работа со строками Работа со временем Генерация различных ID Работа с hardware Сетевые framework Списки и наборы Игры Графика Видео Статистика и математика Обработка данных на потоке и прочее Парсеры Коллекции Встраивание ресурсов (теперь не актуально, так как с версии 1.</description></item><item><title>Internationalization (i18n) и Localization (l10n) в Go</title><link>https://maxtar.github.io/programming/go/i18n-i10n/</link><pubDate>Sun, 02 Oct 2022 14:59:08 +0300</pubDate><guid>https://maxtar.github.io/programming/go/i18n-i10n/</guid><description>Информация взята отсюда
Альтернативный пакет (https://github.com/nicksnyder/go-i18n).
Internationalization (i18n) Localization (l10n) Internationalization (i18n) Для форматирования вывода информации в национальном формате (например, чисел) используются следующие пакеты:
golang.org/x/text/language golang.org/x/text/message По-умолчанию, они не установлены. Необходимо их скачать:
go get -u golang.org/x/text/language go get -u golang.org/x/text/message Для вывода информации на основании языка используется тип message.Printer. Используется он следующий образом:
package main import ( &amp;#34;fmt&amp;#34; &amp;#34;golang.org/x/text/language&amp;#34; &amp;#34;golang.org/x/text/message&amp;#34; ) func main() { p = message.NewPrinter(language.Russian) p.Printf(&amp;#34;Вы получили %.</description></item><item><title>Форматирование даты/времени</title><link>https://maxtar.github.io/programming/go/time-formatting/</link><pubDate>Sun, 02 Oct 2022 14:06:07 +0300</pubDate><guid>https://maxtar.github.io/programming/go/time-formatting/</guid><description>Простейший пример Информация взята Format/parse a time or date
Простейший пример Go, в отличие от других языков, использует свою нотацию для времени не yyyy-MM-dd. Go использует мнемоническую нотацию:
Mon Jan 2 15:04:05 MST 2006.
Её надо переписать в виде, котором надо. Проще всего это запомнить, если переписать её как 01/02 03:04:05PM ‘06 -0700.
Например:
const ( layoutISO = &amp;#34;2006-01-02&amp;#34; layoutUS = &amp;#34;January 2, 2006&amp;#34; ) date := &amp;#34;1999-12-31&amp;#34; t, _ := time.</description></item><item><title>Go</title><link>https://maxtar.github.io/programming/go/</link><pubDate>Sun, 02 Oct 2022 14:02:40 +0300</pubDate><guid>https://maxtar.github.io/programming/go/</guid><description>Различная информация по языку Go Сайт.
Различная информация по языку Go Получение пакетов с зависимостями Полезные статьи и книги Списки проектов Поиск библиотек Полезные команды Разное Основной репозиторий, Зеркало на github.com. Документация по разным библиотекам (GoDoc). Новый сайт с документацией (go.dev). Описание параметров утилиты Go. Gopm Registry реестр разных пакетов go. Можно скачать, если на компьютере не установлены программы версионного контроля. Список архитектур и операционок в которые можно компилировать. Форум.</description></item></channel></rss>