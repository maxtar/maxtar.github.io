<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Go on Max Wiki Site</title><link>https://maxtar.github.io/programming/go/</link><description>Recent content in Go on Max Wiki Site</description><generator>Hugo -- gohugo.io</generator><language>ru-RU</language><lastBuildDate>Sun, 02 Oct 2022 14:02:40 +0300</lastBuildDate><atom:link href="https://maxtar.github.io/programming/go/index.xml" rel="self" type="application/rss+xml"/><item><title>Internationalization (i18n) и Localization (l10n) в Go</title><link>https://maxtar.github.io/programming/go/i18n-i10n/</link><pubDate>Sun, 02 Oct 2022 14:59:08 +0300</pubDate><guid>https://maxtar.github.io/programming/go/i18n-i10n/</guid><description>Информация взята отсюда
Альтернативный пакет (https://github.com/nicksnyder/go-i18n).
Internationalization (i18n) Для форматирования вывода информации в национальном формате (например, чисел) используются следующие пакеты:
golang.org/x/text/language golang.org/x/text/message По-умолчанию, они не установлены. Необходимо их скачать:
go get -u golang.org/x/text/language go get -u golang.org/x/text/message Для вывода информации на основании языка используется тип message.Printer. Используется он следующий образом:
package main import ( &amp;#34;fmt&amp;#34; &amp;#34;golang.org/x/text/language&amp;#34; &amp;#34;golang.org/x/text/message&amp;#34; ) func main() { p = message.NewPrinter(language.Russian) p.Printf(&amp;#34;Вы получили %.2f монет.\n&amp;#34;, 16521.56) } Localization (l10n) Для локализации используются те же пакеты.</description></item><item><title>Форматирование даты/времени</title><link>https://maxtar.github.io/programming/go/time-formatting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://maxtar.github.io/programming/go/time-formatting/</guid><description>Format/parse a time or date Информация взята Format/parse a time or date
Метод Format из пакета time.Time для форматирования строки из времени. Функция time.Parse для получения даты из строки. func (t Time) Format(layout string) string func Parse(layout, value string) (Time, error) Пример:
input := &amp;#34;2017-08-31&amp;#34; layout := &amp;#34;2006-01-02&amp;#34; t, _ := time.Parse(layout, input) fmt.Println(t) // 2017-08-31 00:00:00 #0000 UTC fmt.Println(t.Format(&amp;#34;02-Jan-2006&amp;#34;)) // 31-Aug-2017 The layout parameter should be the reference date Mon Jan 2 15:04:05 MST 2006</description></item></channel></rss>