[{"id":0,"href":"/tags/linux/","title":"linux","parent":"Tags","content":""},{"id":1,"href":"/tags/","title":"Tags","parent":"Тут всё начинается","content":""},{"id":2,"href":"/linux/hibernate/","title":"Настройка hibernate на linux без использования swap раздела","parent":"Linux","content":"Взято отсюда.\nДля начала надо проверить поддержку спящего режима:\nsystemctl hibernate Если выдаётся ошибка типа Failed to hibernate system via logind: Sleep verb “hibernate” not supported”, то, скорее всего, в BIOS включён secure boot. Необходимо его отключить.\nСовременные дистрибутивы, как правило, используют swap файл, а не swap раздел.\nНастройка файла swap 1. Создать файл нужного раздела sudo dd if=/dev/zero of=/swapfile count=16384 bs=1MiB где:\nbs - размер блока. count - размер файла в количестве размера блока. В данном примере размер файла будет равен 16 Гигабайт.\n2. Дать нужные разрешения sudo chmod 600 /swapfile 3. Указываем файл как swap sudo mkswap /swapfile 4. Активировать swap sudo swapon /swapfile 5. Добавить запись в fstab Или проверить, что она там уже есть.\necho \u0026#39;/swapfile none swap sw 0 0\u0026#39; | sudo tee -a /etc/fstab Находим UUID диска и offset файла подкачки Чтобы найти раздел root выполняем команду:\ndf -h находим на какой раздел примонтирован корневой каталог. Например:\nmax@max-dell:~$ df -h Файл.система Размер Использовано Дост Использовано% Cмонтировано в tmpfs 1,6G 1,8M 1,6G 1% /run /dev/sda2 468G 33G 412G 8% / tmpfs 7,8G 32M 7,8G 1% /dev/shm tmpfs 5,0M 4,0K 5,0M 1% /run/lock /dev/sda1 511M 39M 473M 8% /boot/efi tmpfs 1,6G 60K 1,6G 1% /run/user/1000 Видим, что корень примонтирован к разделу /dev/sda2.\nНаходим UUID диска командой blkid. Например:\nmax@max-dell:~$ blkid /dev/sda2: UUID=\u0026#34;9964c46d-d6d7-43c7-b9a9-5fb5844436aa\u0026#34; BLOCK_SIZE=\u0026#34;4096\u0026#34; TYPE=\u0026#34;ext4\u0026#34; PARTUUID=\u0026#34;2ded6755-e0f2-4e2f-94b5-2273fc31f526\u0026#34; Сохраняем в \u0026ldquo;блокноте\u0026rdquo; значение UUID.\nКомандой sudo filefrag -v /swapfile находим физическое смещение swap файла на диске:\nmax@max-dell:~$ sudo filefrag -v /swapfile Filesystem type is: ef53 File size of /swapfile is 17179869184 (4194304 blocks of 4096 bytes) ext: logical_offset: physical_offset: length: expected: flags: 0: 0.. 4095: 1916928.. 1921023: 4096: 1: 4096.. 8191: 1925120.. 1929215: 4096: 1921024: Нужно сохранить значение 1916928 - это физическое смешение файла.\nНастраиваем восстановление из файла подкачки в параметрах ядра sudo vim /etc/default/grub В параметр GRUB_CMDLINE_LINUX_DEFAULT добавляем следующую строку: resume=UUID=xxx resume_offset=xxx, где меняем соответствующие xxx на ранее сохранённые UUID диска и физическое смещение. Например:\nGRUB_CMDLINE_LINUX_DEFAULT=\u0026#34;quiet splash resume=UUID=9964c46d-d6d7-43c7-b9a9-5fb5844436aa resume_offset=1916928\u0026#34; Обновляем конфигурацию grub:\nsudo update-grub После этого должно гибернация должна заработать, если нет, смотри дальше\u0026hellip;\nПересоздаём файлы initramfs Создаём или открываем файл /etc/initramfs-tools/conf.d/resume:\nsudo vim /etc/initramfs-tools/conf.d/resume Вставляем в него такую же строчку:\nRESUME=UUID=9964c46d-d6d7-43c7-b9a9-5fb5844436aa resume_offset=1916928 После сохранения файла пересоздадим initramfs:\nsudo update-initramfs -c -k all Включение пункта \u0026ldquo;Спящий режим\u0026rdquo; в меню Открываем или создаём следующий файл:\nsudo vim /etc/polkit-1/localauthority/50-local.d/com.ubuntu.enable-hibernate.pkla Вставляем в него следующее содержимое:\n[Re-enable hibernate by default in upower] Identity=unix-user:* Action=org.freedesktop.upower.hibernate ResultActive=yes [Re-enable hibernate by default in logind] Identity=unix-user:* Action=org.freedesktop.login1.hibernate;org.freedesktop.login1.handle-hibernate-key;org.freedesktop.login1;org.freedesktop.login1.hibernate-multiple-sessions;org.freedesktop.login1.hibernate-ignore-inhibit ResultActive=yes После перезагрузки или перелогинивания должен появится пункт \u0026ldquo;Спящий режим\u0026rdquo;.\n"},{"id":3,"href":"/tags/firefox/","title":"firefox","parent":"Tags","content":""},{"id":4,"href":"/linux/install-firefox-from-rep/","title":"Установка Firefox из репозитория","parent":"Linux","content":" Удалите Firefox Snap, выполнив следующую команду в новом окне терминала:\nsudo snap remove firefox Добавить PPA команды (Ubuntu) Mozilla в список источников программного обеспечения, выполнив следующую команду в том же окне терминала\nsudo add-apt-repository ppa:mozillateam/ppa Изменить приоритет пакета Firefox, чтобы предпочтительнее использовать версию Firefox PPA/deb/apt. Это можно сделать с помощью фрагмента кода из FosTips (скопируйте и вставьте его целиком, а не построчно)\necho \u0026#39; Package: * Pin: release o=LP-PPA-mozillateam Pin-Priority: 1001 \u0026#39; | sudo tee /etc/apt/preferences.d/mozilla-firefox Поскольку вы (надеюсь) хотите, чтобы будущие обновления Firefox устанавливались автоматически, Балинт Речей поделился в своем блоге краткой командой, которая гарантирует, что это произойдет:\necho \u0026#39;Unattended-Upgrade::Allowed-Origins:: \u0026#34;LP-PPA-mozillateam:${distro_codename}\u0026#34;;\u0026#39; | sudo tee /etc/apt/apt.conf.d/51unattended-upgrades-firefox Наконец, установите Firefox через apt, выполнив эту команду:\nsudo apt install firefox "},{"id":5,"href":"/administration/curl/","title":"Curl","parent":"Администрирование","content":"Полезная информация по работе с curl\nИспользование клиентского сертификата для скачивания curl -O https://url --cert cert.pem --key client.key --cacert ca.pem Ограничение скорости закачки Ключ --limit-rate \u0026lt;speed\u0026gt; Могут быть следующие суффиксы:\n\u0026ldquo;k\u0026rdquo;, \u0026ldquo;K\u0026rdquo; - килобайты. \u0026ldquo;m\u0026rdquo;, \u0026ldquo;M\u0026rdquo; - мегабайты. \u0026ldquo;g\u0026rdquo;, \u0026ldquo;G\u0026rdquo; - гигабайты. Например: 200K, 3m или 1G.\nРасширенное логирование Для расширенного логирования необходимо добавить ключ --trace. После ключа необходимо указать файл в который сохранять trace. Если вместо имени файла указать - то информация будет выводится в консоль.\nВывод произвольной информации о загрузке Для вывода произвольно информации применяется ключ -w. Применяется следующим образом: -w \u0026quot;Download time: %{time_total}, file size: %{size_download}, speed: %{speed_download}\\n\u0026quot;. Могут использоваться следующие параметры:\nПараметр Значение content_type the Content-Type value of the file http_code HTTP(S) code in the page http_connect HTTP code in the proxy response num_connects number of new connections made in the transfer num_redirects number of redirection operations that were made size_download total size of downloaded data size_header total size of the headers size_request total size of the request size_upload total size of uploaded data speed_download average download speed speed_upload average upload speed time_connect time from the start until the remote host connection was made time_namelookup time from the start of the command until name resolution was finished time_pretransfer time from the start until the file transfer was about to begin time_redirect time for all redirection operations time_starttransfer all pretransfer time plus the time needed to calculate the result time_total time for the complete operation (to the millisecond) url_effective the last URL fetched "},{"id":6,"href":"/tags/%D0%B0%D0%B4%D0%BC%D0%B8%D0%BD%D0%B8%D1%81%D1%82%D1%80%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5/","title":"администрирование","parent":"Tags","content":""},{"id":7,"href":"/tags/kotlin/","title":"kotlin","parent":"Tags","content":""},{"id":8,"href":"/programming/kotlin/","title":"Kotlin","parent":"Программирование","content":" Информация по Kotlin Добавление поддержки Kotlin в gradle kotlinlang.ru - сайт, посвящённый Kotlin на-русском. "},{"id":9,"href":"/tags/%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5/","title":"программирование","parent":"Tags","content":""},{"id":10,"href":"/tags/java/","title":"java","parent":"Tags","content":""},{"id":11,"href":"/programming/java/","title":"Java","parent":"Программирование","content":"Информация о Java, примеры использования и библиотеки\nJVM Liberica - сборка openjdk от BellSoft. Принимают участие в развитии openjdk и вообще всячески лицензированы oracle. GraalVM - позволяет запускать не только java, но и JavaScript, Python, Ruby, R, C, C++. AdoptOpenJDK - ещё одна сборка openjdk. Также есть реализация Openj9 вирутальной машины. "},{"id":12,"href":"/tags/go/","title":"go","parent":"Tags","content":""},{"id":13,"href":"/programming/go/i18n-i10n/","title":"Internationalization (i18n) и Localization (l10n) в Go","parent":"Go","content":"Информация взята отсюда\nАльтернативный пакет (https://github.com/nicksnyder/go-i18n).\nInternationalization (i18n) Для форматирования вывода информации в национальном формате (например, чисел) используются следующие пакеты:\n\u0026ldquo;golang.org/x/text/language\u0026rdquo; \u0026ldquo;golang.org/x/text/message\u0026rdquo; По-умолчанию, они не установлены. Необходимо их скачать:\ngo get -u golang.org/x/text/language go get -u golang.org/x/text/message Для вывода информации на основании языка используется тип {{message.Printer}}. Используется он следующий образом:\npackage main import ( \u0026#34;fmt\u0026#34; \u0026#34;golang.org/x/text/language\u0026#34; \u0026#34;golang.org/x/text/message\u0026#34; ) func main() { p = message.NewPrinter(language.Russian) p.Printf(\u0026#34;Вы получили %.2f монет.\\n\u0026#34;, 16521.56) } Localization (l10n) Для локализации используются те же пакеты. Чтобы выводить сообщение в зависимости от языка необходимо задать шаблоны используя метод message.SetString().\nПример кода:\npackage main import ( \u0026#34;fmt\u0026#34; \u0026#34;golang.org/x/text/language\u0026#34; \u0026#34;golang.org/x/text/message\u0026#34; ) func init() { message.SetString(language.Russian, \u0026#34;You\u0026#39;ve got %.2f coins.\u0026#34;, \u0026#34;Вы получили %.2f монет.\u0026#34;) message.SetString(language.English, \u0026#34;You\u0026#39;ve got %.2f coins.\u0026#34;, \u0026#34;You\u0026#39;ve got %.2f coins.\u0026#34;) } func main() { p := message.NewPrinter(language.English) p.Printf(\u0026#34;You\u0026#39;ve got %.2f coins.\u0026#34;, 16521.56) fmt.Println() p = message.NewPrinter(language.Russian) p.Printf(\u0026#34;You\u0026#39;ve got %.2f coins.\u0026#34;, 16521.56) fmt.Println() } "},{"id":14,"href":"/programming/go/","title":"Go","parent":"Программирование","content":" Различная информация по языку Go Internationalization (i18n) и Localization (l10n) в Go Форматирование даты/времени Основной репозиторий, Зеркало на github.com. Документация по разным библиотекам (GoDoc). Новый сайт с документацией (go.dev). Описание параметров утилиты Go. Gopm Registry реестр разных пакетов go. Можно скачать, если на компьютере не установлены программы версионного контроля. Список архитектур и операционок в которые можно компилировать. Форум. Альтернатива Play Golang. Go Report Card. Сервис проверяющий Go репозиторий на соответствие стандартам. Введение в программирование на Go - перевод книги An introduction to programming in Go Получение пакетов с зависимостями go get package/... Получение пакетов, необходимых для текущего приложения:\ngo get . Полезные статьи и книги Building Web Apps with Go. Writing Web Applications. Блог-дайджест по основным моментам Go. Essential Очень много полезной информации по использованию различных функций и пакетов. Множество примеров. Сайт какого-то энтузиаста. Есть основы по написанию web-приложений. go101.org интересные примеры по правильному написанию кода. Go by example - список типовых примеров. Go в примерах - то же самое по-русски. Работа с SQL в Go. Описание go tools - краткое описание возможностей и команд. Памятка по модулям. Списки проектов Ссылки на полезные проекты Go. awesome-go. Non-trivial Golang projects Список Arl Поиск библиотек libraries.io go-search.org golanglibs.com Полезные команды Просмотр, что убеагает в heap.\ngo build -gcflags=\u0026#34;-m -m\u0026#34; Разное On-demand Golang binaries - проект, позволяющий автоматически собирать бинарники Go под разные системы. Например через Github CI. Blog автора. gox ещё популярное решение. Запись в блоге. "},{"id":15,"href":"/blender/addons/","title":"Addons","parent":"Blender","content":" Animation nodes. Документация. Форум. Позволяет анимировать различные сущности Blender. Сейчас уже не очень актуально, так как добавили геометрические ноды в Blender. Pose Thumbnails - вроде тоже уже не актуально, так как имеется встроенная библиотека. Font Selector - дополнение позволяет сразу применять шрифт, который показывается в виде списка, к объекту. А не лазить по директориям в поисках нужного. EasyAlign - позволяет выравнивать объекты относительно друг друга. BlenderArtist.org. Writinganimation - позволяет автоматически делать анимацию написания. BlenderArtist. Fspy привязка фотографий к 3d миру. Сам плагин. mesh_tiny_cad - несколько инструментов в стиле CAD. Очень полезная вещь. GitHub. D-Noise - удаление шума с использованием GPU NVIDIA. Работает только под виндой. GitHub. Сейчас, опять же, есть встроенный шумодав. Screencast-Keys - показ нажатых клавиш для скринкастов. blender-photogrammetry - плагин для фотограмметрии. Видео как использовать. Interactive Tools for Blender - позволяет автоматизировать множество рутиных операций. Sequenser для видео. Облегчает работу при видеомонтаже. Документация. optiloops - позволяет оптимизировать сетку с сохранением приемлемого качества. atomic - плагин позволяющий облегчить ведение проекта. Поиск, пропавших файлов и тому подобное. Welder - плагин позволяет делать сварные швы. Mira Tools - плагин для ретопологии и прочее. BlenderArtist. "},{"id":16,"href":"/tags/blender/","title":"blender","parent":"Tags","content":""},{"id":17,"href":"/blender/","title":"Blender","parent":"Тут всё начинается","content":" В этом разделе будут собираться всякие заметки касательно свободного программного пакета Blender Addons Блог Ивана Вострикова с полезными советами по 3d.\n"},{"id":18,"href":"/linux/autostart/","title":"Автозагрузка","parent":"Linux","content":" Описание для новичков Процесс загрузки "},{"id":19,"href":"/administration/common/","title":"Общие вопросы","parent":"Администрирование","content":" Сети Сети для самых маленьких.\nКонвертация сертификата из cer формата в pem Сохранение клиентского ключа openssl pkcs12 -in client_ssl.pfx -out client_ssl.pem -clcerts Сохранение корневого ключа openssl pkcs12 -in client_ssl.pfx -out root.pem -cacerts Сохранение в один файл, который содержит и ключ и сертификат openssl pkcs12 -in source.pfx -out dest.pem -nodes Сохранение информации в отдельные файлы Сохранение частного ключа openssl pkcs12 -in source.pfx -nocerts -out key.pem Сохранение только сертификата openssl pkcs12 -in source.pfx -clcerts -nokeys -out cert.pem Удаление пароля из файла с ключом openssl rsa -in key.pem -out client.key Сохранение доверенных сертификатов из цепочки openssl pkcs12 -in source.pfx -out ca.pem -cacerts -nokeys "},{"id":20,"href":"/administration/","title":"Администрирование","parent":"Тут всё начинается","content":" Разная информация по администрированию Curl Общие вопросы "},{"id":21,"href":"/programming/","title":"Программирование","parent":"Тут всё начинается","content":" Различная информация, касающаяся программирования Go Internationalization (i18n) и Localization (l10n) в Go Форматирование даты/времени Java Kotlin "},{"id":22,"href":"/linux/","title":"Linux","parent":"Тут всё начинается","content":"Здесь собирается полезная информация касательно настройки Linux.\nАвтозагрузка Настройка hibernate на linux без использования swap раздела Полезная информация по разным командам Linux Установка Firefox из репозитория Сервис по расшифровке команд shell (https://explainshell.com/). Полезная статься Linux-insides на русском. Примеры различных POSIX команд (AWK, GREP и прочее). Fishshell - новая командная оболочка. Исходники на GitHub. Документация. Обучалка. CookBook. Работа с атрибутами файлов. Cheat - подсказки по разным командам linux в консоли. Дистрибутивы Pop - интересный новый дистрибутив на базе Ubuntu. Kodachi - дистрибутив, ориентированный на безопасность. Tails - тоже нацелен на безопасность. Забывают всю информацию при перезагрузке. Manjaro - набирающий популярность. Надо следить. Clearlinux - интересная концепция при поддержке Intel. Описание. Мультимедиа Kodi - мультимедийный комбайн. Libreelec - дистрибутив с kodi. Семейство Ubuntu Ubuntu Kubuntu - основан на Ubuntu. В качестве рабочей среды используется KDE. Lubuntu - лёгкий дистрибутив, основанный на Ubuntu. В качестве рабочей среды используется LXQt. "},{"id":23,"href":"/linux/useful-information/","title":"Полезная информация по разным командам Linux","parent":"Linux","content":" Просмотр журнала journalctl -b -xe -u NetworkManager где:\nb - просмотр последней загрузки. Если указать индекс, начиная с нуля, то можно будет смотреть журнал предыдущих загрузок (0 - текущая, 1 - предыдущая и т.д.); x - вывод расширенной информации (по возможности); e - показ последних записей (перемотка в конец журнала); u - вывод информации от указанного модуля (в данном примере NetworkManager). Описание NetworkManager У него есть, также, интерфейс командной строки nmcli.\nНеобновляемые пакеты Если в результате выполнения команды sudo apt-get update в консоли появляется следующее сообщение:\nПакеты, которые будут оставлены в неизменном виде: \u0026lt;перечисление_пакетов\u0026gt; То необходимо выполнить следующую команду:\nsudo apt-get dist-upgrade Просмотр версии дистрибутива (только для LSB дистрибутивов) lsb_release -a Команда удаления всех старых версий ядра Взято отсюда\nsudo apt-get purge $(dpkg -l \u0026#39;linux-*\u0026#39; | sed \u0026#39;/^ii/!d;/\u0026#39;\u0026#34;$(uname -r | sed \u0026#34;s/\\(.*\\)-\\([^0-9]\\+\\)/\\1/\u0026#34;)\u0026#34;\u0026#39;/d;s/^[^ ]* [^ ]* \\([^ ]*\\).*/\\1/;/[0-9]/!d\u0026#39; | head -n -1) --assume-yes Автоматическое подтверждение перезаписи файлов при копировании yes | cp -rf xxx yyy Снятие сетевого дампа tcpdump -i eth0 -w dump host \u0026#34;hostname.ru\u0026#34; где:\n-i - название сетевого интерфейса с которого снимать dump; -w - имя файла, куда сохранять дамп; host - имя хоста трафик с которого снимать. Разрешение приложению слушать порты ниже 1024 sudo setcap cap_net_bind_service=+ep \u0026lt;app_path\u0026gt; Увеличение используемого диапазона портов sysctl net.ipv4.ip_local_port_range=\u0026#34;15000 61000\u0026#34; Без части \u0026ldquo;=\u0026rdquo; и дальше покажет текущую установку.\nЧтобы прописать настройку в системе постоянно нужно добавить в файл /etc/sysctl.conf следующую строку:\nnet.ipv4.ip_local_port_range = 1024 65535 Запуск процесса в фоне с перенаправлением вывода в указанный файл nohup some_command \u0026amp;\u0026gt; nohup2.out\u0026amp; Проверка DNS systemd-resolve --status Дефрагментация Для проверки фрагментации и дефрагментации разделов (если, вдруг, такое понадобится) используется утилита e4defrag. Проверить фрагментацию можно следующей командой:\nsudo e4defrag -c /dev/sdd1 Где /dev/sdd1 - раздел, который проверяется.\nБудет выведена примерно следующая информация:\nTotal/best extents 792579/758250 Average size per extent 226 KB Fragmentation score 1 [0-30 no problem: 31-55 a little bit fragmented: 56- needs defrag] This device (/dev/sdd1) does not need defragmentation. Done. Нужно смотреть на Fragmentation score. Если он в диапазоне 0-30 - дефрагментация не требуется.\nДля выполнения дефрагментации нужно выполнить следующую команду:\nsudo e4defrag -v /dev/sdd1 ult v - вывод расширенной информации (можно не указывать).\nКопирование/перемещение заданного количества файлов из одного каталога в другой Допустим, хотим переместить/скопировать 10 файлов. Команда выполняется в каталоге из которого надо копировать/переместить файлы.\nПеремещение ls . | head -10 | xargs mv -t \u0026#34;$dst_dir\u0026#34; Копирование** ls . | head -10 | xargs cp -t \u0026#34;$dst_dir\u0026#34; Можно использовать find find ./ -printf \u0026#34;%f\\n\u0026#34; | head -n 10 | xargs -I {} mv {} dst_dir Чтобы не пыталось копировать файл \u0026ldquo;.\u0026rdquo; лучше задать фильтр файлов Например:\nfind ./ -name \u0026#34;*.json\u0026#34; | head -n 10 | xargs -I {} mv {} dst_dir Также можно использовать параметр -exec find . -name \u0026#34;*.json\u0026#34; -exec cp {} ../dst-dir/ \\; Изменение временной зоны из консоли sudo dpkg-reconfigure tzdata Создание архива zip zip -r output_file.zip file1 folder1 Настройка максимального количества открытых файлов Для настройки на время сеанса выполнить команду: ulimit -n 999999. Чтобы задать постоянно, нужно в файле /etc/sysctl.conf прописать:\nfs.file-max = 999999 "},{"id":24,"href":"/","title":"Тут всё начинается","parent":"","content":" Blender Addons Linux Автозагрузка Настройка hibernate на linux без использования swap раздела Полезная информация по разным командам Linux Установка Firefox из репозитория Администрирование Curl Общие вопросы Программирование Go Internationalization (i18n) и Localization (l10n) в Go Форматирование даты/времени Java Kotlin "},{"id":25,"href":"/programming/go/time-formatting/","title":"Форматирование даты/времени","parent":"Go","content":" Format/parse a time or date Информация взята Format/parse a time or date\nМетод Format из пакета time.Time для форматирования строки из времени. Функция time.Parse для получения даты из строки. func (t Time) Format(layout string) string func Parse(layout, value string) (Time, error) Пример:\ninput := \u0026#34;2017-08-31\u0026#34; layout := \u0026#34;2006-01-02\u0026#34; t, _ := time.Parse(layout, input) fmt.Println(t) // 2017-08-31 00:00:00 #0000 UTC fmt.Println(t.Format(\u0026#34;02-Jan-2006\u0026#34;)) // 31-Aug-2017 The layout parameter should be the reference date Mon Jan 2 15:04:05 MST 2006\nformatted the same way as the value should be formatted.\n(Written as 01/02 03:04:05PM ‘06 -0700 it makes a bit more sense.)\nType Options Year 06 2006 Month 01 1 Jan January Day 02 2 _2 (width two, right justified) Weekday Mon Monday Hours 03 3 15 Minutes 04 4 Seconds 05 5 ms μs ns .000 .000000 .000000000 am/pm PM pm Timezone MST Offset -0700 -07 -07:00 Z0700 Z07:00 Common formats Layout Note January 2, 2006 Date 01/02/06 Jan-02-06 15:04:05 Time 3:04:05 PM Jan _2 15:04:05 Timestamp Jan _2 15:04:05.000000 with microseconds 2006-01-02T15:04:05-0700 ISO 8601 2006-01-02 15:04:05 02 Jan 06 15:04 MST RFC 822 02 Jan 06 15:04 -0700 with numeric zone Mon, 02 Jan 2006 15:04:05 MST RFC 1123 Mon, 02 Jan 2006 15:04:05 -0700 with numeric zone The following predefined format constants are also available.\nANSIC = \u0026#34;Mon Jan _2 15:04:05 2006\u0026#34; UnixDate = \u0026#34;Mon Jan _2 15:04:05 MST 2006\u0026#34; RubyDate = \u0026#34;Mon Jan 02 15:04:05 -0700 2006\u0026#34; RFC822 = \u0026#34;02 Jan 06 15:04 MST\u0026#34; RFC822Z = \u0026#34;02 Jan 06 15:04 -0700\u0026#34; RFC850 = \u0026#34;Monday, 02-Jan-06 15:04:05 MST\u0026#34; RFC1123 = \u0026#34;Mon, 02 Jan 2006 15:04:05 MST\u0026#34; RFC1123Z = \u0026#34;Mon, 02 Jan 2006 15:04:05 -0700\u0026#34; RFC3339 = \u0026#34;2006-01-02T15:04:05Z07:00\u0026#34; RFC3339Nano = \u0026#34;2006-01-02T15:04:05.999999999Z07:00\u0026#34; Kitchen = \u0026#34;3:04PM\u0026#34; // Handy time stamps. Stamp = \u0026#34;Jan _2 15:04:05\u0026#34; StampMilli = \u0026#34;Jan _2 15:04:05.000\u0026#34; StampMicro = \u0026#34;Jan _2 15:04:05.000000\u0026#34; StampNano = \u0026#34;Jan _2 15:04:05.000000000\u0026#34; Corner cases\nIt’s not possible to specify that an hour should be rendered without a leading zero in a 24-hour time format.\nIt’s not possible to specify midnight as 24:00 instead of 00:00. A typical usage for this would be giving opening hours ending at midnight, such as 07:00-24:00.\nIt’s not possible to specify a time containing a leap second: 23:59:60. In fact, the time package assumes a Gregorian calendar with no leap seconds.yourbasic.org/golang stopwatch\nThe Format method formats a time.Time. The time.Parse function parses a date string. func (t Time) Format(layout string) string func Parse(layout, value string) (Time, error) input := \u0026#34;2017-08-31\u0026#34; layout := \u0026#34;2006-01-02\u0026#34; t, _ := time.Parse(layout, input) fmt.Println(t) // 2017-08-31 00:00:00 #0000 UTC fmt.Println(t.Format(\u0026#34;02-Jan-2006\u0026#34;)) // 31-Aug-2017 The layout parameter should be the reference date Mon Jan 2 15:04:05 MST 2006 formatted the same way as the value should be formatted.\n(Written as 01/02 03:04:05PM ‘06 -0700 it makes a bit more sense.)\nType Options Year 06 2006 Month 01 1 Jan January Day 02 2 _2 (width two, right justified) Weekday Mon Monday Hours 03 3 15 Minutes 04 4 Seconds 05 5 ms μs ns .000 .000000 .000000000 am/pm PM pm Timezone MST Offset -0700 -07 -07:00 Z0700 Z07:00 Common formats Layout Note January 2, 2006 Date 01/02/06 Jan-02-06 15:04:05 Time 3:04:05 PM Jan _2 15:04:05 Timestamp Jan _2 15:04:05.000000 with microseconds 2006-01-02T15:04:05-0700 ISO 8601 2006-01-02 15:04:05 02 Jan 06 15:04 MST RFC 822 02 Jan 06 15:04 -0700 with numeric zone Mon, 02 Jan 2006 15:04:05 MST RFC 1123 Mon, 02 Jan 2006 15:04:05 -0700 with numeric zone The following predefined format constants are also available.\nANSIC = \u0026#34;Mon Jan _2 15:04:05 2006\u0026#34; UnixDate = \u0026#34;Mon Jan _2 15:04:05 MST 2006\u0026#34; RubyDate = \u0026#34;Mon Jan 02 15:04:05 -0700 2006\u0026#34; RFC822 = \u0026#34;02 Jan 06 15:04 MST\u0026#34; RFC822Z = \u0026#34;02 Jan 06 15:04 -0700\u0026#34; RFC850 = \u0026#34;Monday, 02-Jan-06 15:04:05 MST\u0026#34; RFC1123 = \u0026#34;Mon, 02 Jan 2006 15:04:05 MST\u0026#34; RFC1123Z = \u0026#34;Mon, 02 Jan 2006 15:04:05 -0700\u0026#34; RFC3339 = \u0026#34;2006-01-02T15:04:05Z07:00\u0026#34; RFC3339Nano = \u0026#34;2006-01-02T15:04:05.999999999Z07:00\u0026#34; Kitchen = \u0026#34;3:04PM\u0026#34; // Handy time stamps. Stamp = \u0026#34;Jan _2 15:04:05\u0026#34; StampMilli = \u0026#34;Jan _2 15:04:05.000\u0026#34; StampMicro = \u0026#34;Jan _2 15:04:05.000000\u0026#34; StampNano = \u0026#34;Jan _2 15:04:05.000000000\u0026#34; Corner cases\nIt’s not possible to specify that an hour should be rendered without a leading zero in a 24-hour time format.\nIt’s not possible to specify midnight as 24:00 instead of 00:00. A typical usage for this would be giving opening hours ending at midnight, such as 07:00-24:00.\nIt’s not possible to specify a time containing a leap second: 23:59:60. In fact, the time package assumes a Gregorian calendar with no leap seconds.\n"}]