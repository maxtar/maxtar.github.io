<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Тут всё начинается on Max Wiki Site</title><link>https://maxtar.github.io/</link><description>Recent content in Тут всё начинается on Max Wiki Site</description><generator>Hugo -- gohugo.io</generator><language>ru-RU</language><lastBuildDate>Sat, 01 Oct 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://maxtar.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Настройка hibernate на linux без использования swap раздела</title><link>https://maxtar.github.io/linux/hibernate/</link><pubDate>Mon, 03 Oct 2022 13:28:23 +0300</pubDate><guid>https://maxtar.github.io/linux/hibernate/</guid><description>Взято отсюда.
Для начала надо проверить поддержку спящего режима:
systemctl hibernate Если выдаётся ошибка типа Failed to hibernate system via logind: Sleep verb “hibernate” not supported”, то, скорее всего, в BIOS включён secure boot. Необходимо его отключить.
Современные дистрибутивы, как правило, используют swap файл, а не swap раздел.
Настройка файла swap 1. Создать файл нужного раздела sudo dd if=/dev/zero of=/swapfile count=16384 bs=1MiB где:
bs - размер блока. count - размер файла в количестве размера блока.</description></item><item><title>Установка Firefox из репозитория</title><link>https://maxtar.github.io/linux/install-firefox-from-rep/</link><pubDate>Mon, 03 Oct 2022 12:59:56 +0300</pubDate><guid>https://maxtar.github.io/linux/install-firefox-from-rep/</guid><description>Удалите Firefox Snap, выполнив следующую команду в новом окне терминала:
sudo snap remove firefox Добавить PPA команды (Ubuntu) Mozilla в список источников программного обеспечения, выполнив следующую команду в том же окне терминала
sudo add-apt-repository ppa:mozillateam/ppa Изменить приоритет пакета Firefox, чтобы предпочтительнее использовать версию Firefox PPA/deb/apt. Это можно сделать с помощью фрагмента кода из FosTips (скопируйте и вставьте его целиком, а не построчно)
echo &amp;#39; Package: * Pin: release o=LP-PPA-mozillateam Pin-Priority: 1001 &amp;#39; | sudo tee /etc/apt/preferences.</description></item><item><title>Curl</title><link>https://maxtar.github.io/administration/curl/</link><pubDate>Sun, 02 Oct 2022 22:27:44 +0300</pubDate><guid>https://maxtar.github.io/administration/curl/</guid><description>Полезная информация по работе с curl
Использование клиентского сертификата для скачивания curl -O https://url --cert cert.pem --key client.key --cacert ca.pem Ограничение скорости закачки Ключ --limit-rate &amp;lt;speed&amp;gt; Могут быть следующие суффиксы:
&amp;ldquo;k&amp;rdquo;, &amp;ldquo;K&amp;rdquo; - килобайты. &amp;ldquo;m&amp;rdquo;, &amp;ldquo;M&amp;rdquo; - мегабайты. &amp;ldquo;g&amp;rdquo;, &amp;ldquo;G&amp;rdquo; - гигабайты. Например: 200K, 3m или 1G.
Расширенное логирование Для расширенного логирования необходимо добавить ключ --trace. После ключа необходимо указать файл в который сохранять trace. Если вместо имени файла указать - то информация будет выводится в консоль.</description></item><item><title>Internationalization (i18n) и Localization (l10n) в Go</title><link>https://maxtar.github.io/programming/go/i18n-i10n/</link><pubDate>Sun, 02 Oct 2022 14:59:08 +0300</pubDate><guid>https://maxtar.github.io/programming/go/i18n-i10n/</guid><description>Информация взята отсюда
Альтернативный пакет (https://github.com/nicksnyder/go-i18n).
Internationalization (i18n) Для форматирования вывода информации в национальном формате (например, чисел) используются следующие пакеты:
golang.org/x/text/language golang.org/x/text/message По-умолчанию, они не установлены. Необходимо их скачать:
go get -u golang.org/x/text/language go get -u golang.org/x/text/message Для вывода информации на основании языка используется тип message.Printer. Используется он следующий образом:
package main import ( &amp;#34;fmt&amp;#34; &amp;#34;golang.org/x/text/language&amp;#34; &amp;#34;golang.org/x/text/message&amp;#34; ) func main() { p = message.NewPrinter(language.Russian) p.Printf(&amp;#34;Вы получили %.2f монет.\n&amp;#34;, 16521.56) } Localization (l10n) Для локализации используются те же пакеты.</description></item><item><title>Addons</title><link>https://maxtar.github.io/blender/addons/</link><pubDate>Sat, 01 Oct 2022 22:23:09 +0300</pubDate><guid>https://maxtar.github.io/blender/addons/</guid><description>Animation nodes. Документация. Форум. Позволяет анимировать различные сущности Blender. Сейчас уже не очень актуально, так как добавили геометрические ноды в Blender. Pose Thumbnails - вроде тоже уже не актуально, так как имеется встроенная библиотека. Font Selector - дополнение позволяет сразу применять шрифт, который показывается в виде списка, к объекту. А не лазить по директориям в поисках нужного. EasyAlign - позволяет выравнивать объекты относительно друг друга. BlenderArtist.org. Writinganimation - позволяет автоматически делать анимацию написания.</description></item><item><title>Автозагрузка</title><link>https://maxtar.github.io/linux/autostart/</link><pubDate>Sat, 01 Oct 2022 22:15:36 +0300</pubDate><guid>https://maxtar.github.io/linux/autostart/</guid><description> Описание для новичков Процесс загрузки</description></item><item><title>Общие вопросы</title><link>https://maxtar.github.io/administration/common/</link><pubDate>Sat, 01 Oct 2022 21:24:41 +0300</pubDate><guid>https://maxtar.github.io/administration/common/</guid><description>Сети Сети для самых маленьких.
Конвертация сертификата из cer формата в pem Сохранение клиентского ключа openssl pkcs12 -in client_ssl.pfx -out client_ssl.pem -clcerts Сохранение корневого ключа openssl pkcs12 -in client_ssl.pfx -out root.pem -cacerts Сохранение в один файл, который содержит и ключ и сертификат openssl pkcs12 -in source.pfx -out dest.pem -nodes Сохранение информации в отдельные файлы Сохранение частного ключа openssl pkcs12 -in source.pfx -nocerts -out key.pem Сохранение только сертификата openssl pkcs12 -in source.</description></item><item><title>Полезная информация по разным командам Linux</title><link>https://maxtar.github.io/linux/useful-information/</link><pubDate>Sat, 01 Oct 2022 00:00:00 +0000</pubDate><guid>https://maxtar.github.io/linux/useful-information/</guid><description>Просмотр журнала journalctl -b -xe -u NetworkManager где:
b - просмотр последней загрузки. Если указать индекс, начиная с нуля, то можно будет смотреть журнал предыдущих загрузок (0 - текущая, 1 - предыдущая и т.д.); x - вывод расширенной информации (по возможности); e - показ последних записей (перемотка в конец журнала); u - вывод информации от указанного модуля (в данном примере NetworkManager). Описание NetworkManager У него есть, также, интерфейс командной строки nmcli.</description></item><item><title>Форматирование даты/времени</title><link>https://maxtar.github.io/programming/go/time-formatting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://maxtar.github.io/programming/go/time-formatting/</guid><description>Format/parse a time or date Информация взята Format/parse a time or date
Метод Format из пакета time.Time для форматирования строки из времени. Функция time.Parse для получения даты из строки. func (t Time) Format(layout string) string func Parse(layout, value string) (Time, error) Пример:
input := &amp;#34;2017-08-31&amp;#34; layout := &amp;#34;2006-01-02&amp;#34; t, _ := time.Parse(layout, input) fmt.Println(t) // 2017-08-31 00:00:00 #0000 UTC fmt.Println(t.Format(&amp;#34;02-Jan-2006&amp;#34;)) // 31-Aug-2017 The layout parameter should be the reference date Mon Jan 2 15:04:05 MST 2006</description></item></channel></rss>